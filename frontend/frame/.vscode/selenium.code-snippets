{
  "Add new page": {
    "scope": "javascript",
    "prefix": ["md_selenium_page"],
    "body": [
      "const { By } = require('selenium-webdriver');",
      "const BasePage = require('./base-page');",
      "const config = require('../helper/selenium-config');",
      "",
      "class ${TM_FILENAME_BASE/([a-zA-Z]*)-([a-zA-Z]*)-*([a-zA-Z]*)/${1:/capitalize}${2:/capitalize}${3:/capitalize}/} extends BasePage {",
      "  constructor(driver) {",
      "    super(driver, config.url.${TM_FILENAME_BASE/([a-zA-Z]*)-*([a-zA-Z]*)-page/${1}${2:/capitalize}/}, 'id_MISING');",
      "  }",
      "}",
      "",
      "module.exports = ${TM_FILENAME_BASE/([a-zA-Z]*)-([a-zA-Z]*)-*([a-zA-Z]*)/${1:/capitalize}${2:/capitalize}${3:/capitalize}/};",
      ""
    ],
    "description": "add new selenium page"
  },
  "Add new test": {
    "scope": "javascript",
    "prefix": ["md_selenium_test"],
    "body": [
      "/* eslint-disable func-names, prefer-arrow-callback */",
      "",
      "const assert = require('assert');",
      "const BasePage = require('./pages/base-page');",
      "const ${TM_FILENAME_BASE/([a-zA-Z]*)-*([a-zA-Z]*)-tests/${1:/capitalize}${2:/capitalize}/}Page = require('./pages/${TM_FILENAME_BASE/([a-zA-Z-]+)-tests/$1-page/}');",
      "",
      "describe('${TM_FILENAME_BASE/[-]/\\//g}', function () {",
      "  let driver = null;",
      "  this.timeout(5000);",
      "",
      "  before(async function () {",
      "    driver = await BasePage.driver();",
      "  });",
      "",
      "  after(async function () {",
      "    await driver.quit();",
      "  });",
      "",
      "  describe('mobile', function () {",
      "    it('test', async function () {",
      "      await BasePage.mobilescreen(driver);",
      "      const page = new ${TM_FILENAME_BASE/([a-zA-Z]*)-*([a-zA-Z]*)-tests/${1:/capitalize}${2:/capitalize}/}Page(driver);",
      "      await page.request();",
      "      // assert.equal(await page.headline(), 'License index');",
      "    });",
      "  });",
      "",
      "  describe('fullscreen', function () {",
      "    it('check headline', async function () {",
      "      await BasePage.mobilescreen(driver);",
      "      const page = new ${TM_FILENAME_BASE/([a-zA-Z]*)-*([a-zA-Z]*)-tests/${1:/capitalize}${2:/capitalize}/}Page(driver);",
      "      await page.request();",
      "      // assert.equal(await page.headline(), 'License index');",
      "    });",
      "  });",
      "});",
      ""
    ],
    "description": "add new selenium page"
  }
}